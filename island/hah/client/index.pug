doctype html
html
	head
		title='Holograms Against Humanity'

		if gaPropertyId
			script.
				// do google analytics tracking
				(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
				(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
				m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
				})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
				ga('create', '#{gaPropertyId}', 'auto');
				ga('send', 'pageview');
		else
			script.
				var ga = function () {};

		script(src='http://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js')
		script(src='http://aframe.io/releases/0.3.0/aframe.min.js')
		script(src='http://island.jacobralph.org/assets/aframe-component.js')

	body
		script(src='/static/bundle.js')
		a-scene(altspace='fullspace: true', debug='')
			a-assets
				a-asset-item#sco(src='http://island.jacobralph.org/assets/island.dae')
				a-asset-item#sign(src='http://island.jacobralph.org/assets/sign.dae')
				a-asset-item#cl(src='http://island.jacobralph.org/assets/island.json')
			a-entity#ci2(position='0 0 0', blend-model='#ci', altspace-cursor-collider='enabled: false', n-mesh-collider='type: environment;')
			a-entity#sco2(position='0 0 0', collada-model='#sco', collide-mesh='', altspace-cursor-collider='enabled: false', n-mesh-collider='type: environment;')
			a-entity(position='0 2 0', collada-model='#sign', collide-mesh='', altspace-cursor-collider='enabled: false')
			// <a-box color="tomato" depth="2" height="4" width="0.5" position="1 1 1" n-mesh-collider="type: environment;"></a-box>
			a-plane(altspace-cursor-collider='enabled: false', material='src: url(./assets/water10.jpg); repeat: 30 30;', height='130', width='130', rotation='-90 0 0', position='0.0 0.40 0.0', opacity='0.7', transparent='true')
				a-animation(attribute='position', dur='4000', direction='alternate', easing='ease-in-out-sine', to='0.0 0.33 0.0', repeat='indefinite')
			//
				<a-plane altspace-cursor-collider="enabled: false" material="src: url(./assets/water10.jpg); repeat: 30 30;" height="100" width="100" rotation="-90 0 0" position="0.25 0.35 0.25" opacity="0.3">
				<a-animation attribute="position" dur="4000" direction="alternate" easing="ease-in-out-sine" to="0.5 0.35 0.5" repeat="indefinite"></a-animation>
				</a-plane>
			a-entity(position='0 -54.3 -2', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
			a-entity(position='7 -54.3 -11', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
			a-entity(position='10 -54.3 0', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
			a-entity(position='10 -54.3 10', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
			a-entity(position='9 -54.3 19', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
			// --xy
			a-entity(position='-9 -54.3 -9', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
			a-entity(position='-9 -54.3 -15', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
			a-entity(position='1 -54.3 -14', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
			a-entity(position='-28 -54.3 1', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
			a-entity(position='-17 -54.3 -7', n-sphere-collider='type: environment; radius:55', radius='55', opacity='0')
		script.
			var sim = altspace.utilities.Simulation();
			var loader = new THREE.TextureLoader();
			loader.crossOrigin = '';
			var texture = THREE.ImageUtils.loadTexture( "https://island.jacobralph.org//assets/skydome.png" );
			var skyGeo = new THREE.SphereGeometry(500, 100, 100);
			var material = new THREE.MeshPhongMaterial({
			map: texture,
			});
			var sky = new THREE.Mesh(skyGeo, material);
			sky.position.y = -80;
			sky.rotation.y = -125 * (Math.PI / 180);
			sky.material.side = THREE.BackSide;
			sim.scene.add(sky);
			var sources = [];
			var skeleton = {};
			sources.push("./assets/ocean.mp3");
			var sound1, sound2;
			var clock = new THREE.Clock();
			var Sound = function ( sources, radius, volume, position) {
			var audio = document.createElement( 'audio' );
			audio.addEventListener('ended', function() {
			this.currentTime = 0;
			this.play();
			}, false);
			for ( var i = 0; i < sources.length; i ++ ) {
			var source = document.createElement( 'source' );
			source.src = sources[ i ];
			audio.appendChild( source );
			}
			this.position = position;
			audio.volume = volume;
			this.play = function () {
			audio.play();
			}
			this.update = function ( p2 ) {
			var distance = this.position.distanceTo( p2 );
			if ( distance <= radius ) {
			audio.volume = volume * ( 1 - distance / radius );
			} else {
			audio.volume = 0;
			}
			}
			}
			var sound = new Sound(sources, 1500, 0.07, new THREE.Vector3(0, -360, 0));
			sound.play();
			var lastupdate = "";
			document.addEventListener('DOMContentLoaded', function(){
			setInterval(function(e){
			$.ajax({ type: "GET",
			url: "http://island.jacobralph.org/lastupdate.txt",
			async: true,
			success : function(text)
			{
			console.log(text);
			if(lastupdate == ""){
			lastupdate = text;
			} else {
			if(lastupdate != text){
			location.reload(true);
			}
			}
			}
			});
			}, 5000);
			});
			var geometry2 = new THREE.BoxGeometry(0.15,3.2,4);
			var material2 = new THREE.MeshLambertMaterial({color: 0x0000ff, transparent: true, opacity: 0.0});
			var box = new THREE.Mesh(geometry2, material2);
			box.position.y = 2.5;
			box.position.x = 10;
			sim.scene.add(box);
			var geometry3 = new THREE.BoxGeometry(0.15,3.2,4);
			var material3 = new THREE.MeshLambertMaterial({color: 0x0000ff, transparent: true, opacity: 0.0});
			var box2 = new THREE.Mesh(geometry3, material3);
			box2.position.y = 2.5;
			box2.position.x = 10;
			box2.rotation.y = -180 * (Math.PI / 180)
			sim.scene.add(box2);
			var geometry4 = new THREE.BoxGeometry(4,3.2,0.15);
			var material4 = new THREE.MeshLambertMaterial({color: 0x0000ff, transparent: true, opacity: 0.0});
			var box3 = new THREE.Mesh(geometry4, material4);
			box3.position.y = 2.5;
			box3.position.x = 10;
			box3.rotation.y = -90 * (Math.PI / 180)
			sim.scene.add(box3);
			var geometry5 = new THREE.BoxGeometry(4,3.2,0.15);
			var material5 = new THREE.MeshLambertMaterial({color: 0x0000ff, transparent: true, opacity: 0.0});
			var box5 = new THREE.Mesh(geometry5, material5);
			box5.position.y = 2.5;
			box5.position.x = 10;
			box5.rotation.y = 90 * (Math.PI / 180)
			sim.scene.add(box5);